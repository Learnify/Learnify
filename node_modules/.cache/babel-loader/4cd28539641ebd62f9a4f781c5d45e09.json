{"ast":null,"code":"var loadState = function loadState() {\n  try {\n    var serializedState = localStorage.getItem('state');\n\n    if (serializedState === null) {\n      return {};\n    }\n\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return {};\n  }\n};\n\nvar loadAuthReducer = function loadAuthReducer() {\n  try {\n    var serializedState = localStorage.getItem('state');\n\n    if (serializedState === null) {\n      return {};\n    }\n\n    return JSON.parse(serializedState).authentication;\n  } catch (err) {\n    return {};\n  }\n};\n\nvar loadRegistrationReducer = function loadRegistrationReducer() {\n  try {\n    var serializedState = localStorage.getItem('state');\n\n    if (serializedState === null) {\n      return {};\n    }\n\n    return JSON.parse(serializedState).registration;\n  } catch (err) {\n    return {};\n  }\n};\n\nvar loadLoggedIn = function loadLoggedIn() {\n  try {\n    var serializedToken = JSON.parse(localStorage.getItem('state')).authentication.loggedIn;\n\n    if (serializedToken === null) {\n      return undefined;\n    }\n\n    return serializedToken;\n  } catch (err) {\n    return undefined;\n  }\n};\n\nvar saveState = function saveState(state) {\n  try {\n    if (JSON.parse(localStorage.getItem('state'))) {\n      removeState();\n    }\n\n    var serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nvar removeState = function removeState() {\n  try {\n    localStorage.removeItem('state');\n  } catch (err) {}\n};\n\nvar clearLocalStorage = function clearLocalStorage() {\n  localStorage.clear();\n};\n\nexport { loadState, saveState, removeState, clearLocalStorage, loadLoggedIn, loadAuthReducer, loadRegistrationReducer };","map":{"version":3,"sources":["/home/daniel/Documents/Learnify_Front/src/redux/store/localStorage.js"],"names":["loadState","serializedState","localStorage","getItem","JSON","parse","err","loadAuthReducer","authentication","loadRegistrationReducer","registration","loadLoggedIn","serializedToken","loggedIn","undefined","saveState","state","removeState","stringify","setItem","removeItem","clearLocalStorage","clear"],"mappings":"AAAA,IAAMA,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,MAAI;AACF,QAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB;;AACA,QAAIF,eAAe,KAAK,IAAxB,EAA8B;AAC5B,aAAO,EAAP;AACD;;AACD,WAAOG,IAAI,CAACC,KAAL,CAAWJ,eAAX,CAAP;AACD,GAND,CAOA,OAAOK,GAAP,EAAY;AACV,WAAO,EAAP;AACD;AACF,CAXD;;AAaA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,MAAI;AACF,QAAMN,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB;;AACA,QAAIF,eAAe,KAAK,IAAxB,EAA8B;AAC5B,aAAO,EAAP;AACD;;AACD,WAAOG,IAAI,CAACC,KAAL,CAAWJ,eAAX,EAA4BO,cAAnC;AACD,GAND,CAOA,OAAOF,GAAP,EAAY;AACV,WAAO,EAAP;AACD;AACF,CAXD;;AAaA,IAAMG,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AACpC,MAAI;AACF,QAAMR,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB;;AACA,QAAIF,eAAe,KAAK,IAAxB,EAA8B;AAC5B,aAAO,EAAP;AACD;;AACD,WAAOG,IAAI,CAACC,KAAL,CAAWJ,eAAX,EAA4BS,YAAnC;AACD,GAND,CAOA,OAAOJ,GAAP,EAAY;AACV,WAAO,EAAP;AACD;AACF,CAXD;;AAaA,IAAMK,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,MAAI;AACF,QAAMC,eAAe,GAAGR,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,EAA0CK,cAA1C,CAAyDK,QAAjF;;AACA,QAAID,eAAe,KAAK,IAAxB,EAA8B;AAC5B,aAAOE,SAAP;AACD;;AACD,WAAOF,eAAP;AACD,GAND,CAOA,OAAON,GAAP,EAAY;AACV,WAAOQ,SAAP;AACD;AACF,CAXD;;AAaA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAC3B,MAAI;AACF,QAAIZ,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAJ,EAA+C;AAC7Cc,MAAAA,WAAW;AACZ;;AACD,QAAMhB,eAAe,GAAGG,IAAI,CAACc,SAAL,CAAeF,KAAf,CAAxB;AACAd,IAAAA,YAAY,CAACiB,OAAb,CAAqB,OAArB,EAA8BlB,eAA9B;AACD,GAND,CAOA,OAAOK,GAAP,EAAY;AACV,WAAOQ,SAAP;AACD;AACF,CAXD;;AAaA,IAAMG,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,MAAI;AACFf,IAAAA,YAAY,CAACkB,UAAb,CAAwB,OAAxB;AACD,GAFD,CAGA,OAAOd,GAAP,EAAY,CAEX;AACF,CAPD;;AASA,IAAMe,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BnB,EAAAA,YAAY,CAACoB,KAAb;AACD,CAFD;;AAIA,SAAStB,SAAT,EAAoBe,SAApB,EAA+BE,WAA/B,EAA4CI,iBAA5C,EAA+DV,YAA/D,EAA6EJ,eAA7E,EAA8FE,uBAA9F","sourcesContent":["const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return {};\n    }\n    return JSON.parse(serializedState);\n  }\n  catch (err) {\n    return {};\n  }\n};\n\nconst loadAuthReducer = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return {};\n    }\n    return JSON.parse(serializedState).authentication;\n  }\n  catch (err) {\n    return {};\n  }\n};\n\nconst loadRegistrationReducer = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return {};\n    }\n    return JSON.parse(serializedState).registration;\n  }\n  catch (err) {\n    return {};\n  }\n};\n\nconst loadLoggedIn = () => {\n  try {\n    const serializedToken = JSON.parse(localStorage.getItem('state')).authentication.loggedIn;\n    if (serializedToken === null) {\n      return undefined;\n    }\n    return serializedToken;\n  }\n  catch (err) {\n    return undefined;\n  }\n};\n\nconst saveState = (state) => {\n  try {\n    if (JSON.parse(localStorage.getItem('state'))) {\n      removeState();\n    }\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  }\n  catch (err) {\n    return undefined;\n  }\n};\n\nconst removeState = () => {\n  try {\n    localStorage.removeItem('state');\n  }\n  catch (err) {\n\n  }\n};\n\nconst clearLocalStorage = () => {\n  localStorage.clear();\n};\n\nexport { loadState, saveState, removeState, clearLocalStorage, loadLoggedIn, loadAuthReducer, loadRegistrationReducer };"]},"metadata":{},"sourceType":"module"}